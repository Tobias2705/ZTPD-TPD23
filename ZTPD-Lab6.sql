-- Ćwiczenie 1A
select lpad('-',2*(level-1),'|-') || t.owner||'.'||t.type_name||' (FINAL:'||t.final||
', INSTANTIABLE:'||t.instantiable||', ATTRIBUTES:'||t.attributes||', METHODS:'||t.methods||')'
from all_types t
start with t.type_name = 'ST_GEOMETRY'
connect by prior t.type_name = t.supertype_name
 and prior t.owner = t.owner;

-- Ćwiczenie 1B
select distinct m.method_name
from all_type_methods m
where m.type_name like 'ST_POLYGON'
and m.owner = 'MDSYS'
order by 1;

-- Ćwiczenie 1C
CREATE TABLE MYST_MAJOR_CITIES (
    FIPS_CNTRY VARCHAR2(2),
    CITY_NAME VARCHAR2(40),
    STGEOM ST_POINT);

-- Ćwiczenie 1D 
INSERT INTO MYST_MAJOR_CITIES
SELECT
    FIPS_CNTRY,
    CITY_NAME,
    ST_POINT(GEOM) AS STGEOM
FROM MAJOR_CITIES;

SELECT * FROM MYST_MAJOR_CITIES;

-- Ćwiczenie 2A
INSERT INTO MYST_MAJOR_CITIES VALUES (
    'PL',
    'SZCZYRK',
    ST_POINT(19.036107, 49.718655, 8307)
);

SELECT * FROM MYST_MAJOR_CITIES WHERE CITY_NAME='SZCZYRK';

-- Ćwiczenie 3A
CREATE TABLE MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_MULTIPOLYGON
);

-- Ćwiczenie 3B
INSERT INTO MYST_COUNTRY_BOUNDARIES
SELECT
    FIPS_CNTRY,
    CNTRY_NAME,
    ST_MULTIPOLYGON(GEOM) AS STGEOM
FROM COUNTRY_BOUNDARIES;

SELECT * FROM MYST_COUNTRY_BOUNDARIES;

-- Ćwiczenie 3C
SELECT MY_C.STGEOM.ST_GEOMETRYTYPE() AS TYP_OBIEKTU, COUNT(*) AS ILE
FROM MYST_COUNTRY_BOUNDARIES MY_C
GROUP BY MY_C.STGEOM.ST_GEOMETRYTYPE();

-- Ćwiczenie 3D
SELECT MY_C.STGEOM.ST_ISSIMPLE()
FROM MYST_COUNTRY_BOUNDARIES MY_C;

-- Ćwiczenie 4A
SELECT MY_C.CNTRY_NAME, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES MY_C, MYST_MAJOR_CITIES MY_M
WHERE MY_M.STGEOM.ST_WITHIN(MY_C.STGEOM) = 1
GROUP BY MY_C.CNTRY_NAME;

-- Ćwiczenie 4B
SELECT MY_C1.CNTRY_NAME AS M1_NAME, MY_C2.CNTRY_NAME AS M2_NAME
FROM MYST_COUNTRY_BOUNDARIES MY_C1, MYST_COUNTRY_BOUNDARIES MY_C2
WHERE MY_C1.STGEOM.ST_TOUCHES(MY_C2.STGEOM) = 1 
AND MY_C2.CNTRY_NAME = 'Czech Republic';

-- Ćwiczenie 4C
SELECT DISTINCT MY_C.CNTRY_NAME, R.NAME
FROM MYST_COUNTRY_BOUNDARIES MY_C, RIVERS R
WHERE MY_C.STGEOM.ST_CROSSES(ST_LINESTRING(R.GEOM)) = 1
AND MY_C.CNTRY_NAME = 'Czech Republic';

-- Ćwiczenie 4D
SELECT ROUND(TREAT(MY_C1.STGEOM.ST_UNION(MY_C2.STGEOM) AS ST_POLYGON).ST_AREA(), -2) AS POWIERZCHNIA
FROM MYST_COUNTRY_BOUNDARIES MY_C1, MYST_COUNTRY_BOUNDARIES MY_C2
WHERE MY_C1.CNTRY_NAME = 'Czech Republic' 
AND MY_C2.CNTRY_NAME = 'Slovakia';

-- Ćwiczenie 4E
SELECT
    MY_C.STGEOM OBIEKT,
    MY_C.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(W.GEOM)).ST_GEOMETRYTYPE() WEGRY_BEZ
FROM MYST_COUNTRY_BOUNDARIES MY_C, WATER_BODIES W
WHERE MY_C.CNTRY_NAME = 'Hungary' AND W.NAME = 'Balaton';

-- Ćwiczenie 5A
EXPLAIN PLAN FOR
SELECT COUNT(*) AS LICZBA_MIEJSCOWOSCI
FROM MYST_COUNTRY_BOUNDARIES MY_C, MYST_MAJOR_CITIES MY_M
WHERE SDO_WITHIN_DISTANCE(MY_M.STGEOM, MY_C.STGEOM, 'distance=100 unit=km') = 'TRUE'
    AND MY_C.CNTRY_NAME = 'Poland'
GROUP BY MY_C.CNTRY_NAME;

SELECT PLAN_TABLE_OUTPUT 
FROM TABLE(DBMS_XPLAN.DISPLAY);

-- Ćwiczenie 5B
INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_MAJOR_CITIES', 'STGEOM', T.DIMINFO, T.SRID
FROM   ALL_SDO_GEOM_METADATA T
WHERE  T.TABLE_NAME = 'MAJOR_CITIES';

INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_COUNTRY_BOUNDARIES', 'STGEOM', T.DIMINFO, T.SRID
FROM   ALL_SDO_GEOM_METADATA T
WHERE  T.TABLE_NAME = 'COUNTRY_BOUNDARIES';

-- Ćwiczenie 5C
CREATE INDEX MYST_MAJOR_CITIES_IDX
ON MYST_MAJOR_CITIES(STGEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

CREATE INDEX MYST_COUNTRY_BOUNDARIES_IDX
ON MYST_COUNTRY_BOUNDARIES(STGEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

-- Ćwiczenie 5D
EXPLAIN PLAN FOR
SELECT COUNT(*) AS LICZBA_MIEJSCOWOSCI
FROM MYST_COUNTRY_BOUNDARIES MY_C, MYST_MAJOR_CITIES MY_M
WHERE SDO_WITHIN_DISTANCE(MY_M.STGEOM, MY_C.STGEOM, 'distance=100 unit=km') = 'TRUE'
    AND MY_C.CNTRY_NAME = 'Poland'
GROUP BY MY_C.CNTRY_NAME;

SELECT PLAN_TABLE_OUTPUT 
FROM TABLE(DBMS_XPLAN.DISPLAY); -- Wykorzystano założone indeksy. 